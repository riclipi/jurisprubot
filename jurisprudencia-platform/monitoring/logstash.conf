input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][service] == "jurisprudencia-api" {
    # Parse JSON logs from FastAPI
    if [message] =~ /^\{/ {
      json {
        source => "message"
      }
    }
    
    # Parse log level
    if [level] {
      mutate {
        uppercase => [ "level" ]
      }
    }
    
    # Add service metadata
    mutate {
      add_field => { "service" => "jurisprudencia-api" }
      add_field => { "environment" => "%{[fields][environment]}" }
    }
  }
  
  if [fields][service] == "celery" {
    # Parse Celery logs
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] %{LOGLEVEL:level}: %{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    
    mutate {
      add_field => { "service" => "celery" }
    }
  }
  
  if [fields][service] == "postgres" {
    # Parse PostgreSQL logs
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:pid}\] %{WORD:level}:  %{GREEDYDATA:message}" }
      overwrite => [ "message" ]
    }
    
    mutate {
      add_field => { "service" => "postgres" }
    }
  }
  
  # Parse timestamps
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "agent", "ecs", "host", "input", "log" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "jurisprudencia-logs-%{+YYYY.MM.dd}"
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug
  }
}